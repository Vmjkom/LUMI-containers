name: LUMI Container Build Workflow 
run-name: ${{ github.actor }} is running LUMI container build workflow
on: [push]
env:
  OPENSTACK_IMAGE_NAME: "ghcr.io/${{ github.repository_owner }}/openstack:latest"
jobs:
#   OpenStack-Container-Check:
#     outputs:
#       run_job: ${{ steps.check_files.outputs.run_job }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 2
#       - name: check modified files
#         id: check_files
#         run: |
#           set -e
#           set -o pipefail
#           if git diff --name-only HEAD^ HEAD | grep 'ci/openstack/Dockerfile' ; then
#             echo "::set-output name=run_job::true"
#           else
#             echo "::set-output name=run_job::false"
#           fi
#   OpenStack-Container:
#     needs: OpenStack-Container-Check
#     if: needs.OpenStack-Container-Check.outputs.run_job == 'true'
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#     steps:
#       - uses: actions/checkout@v4
#       - name: Log in to registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#       - name: Build openstack image
#         run: |
#           docker pull $OPENSTACK_IMAGE_NAME || true
#           docker build ./ci/openstack --tag $OPENSTACK_IMAGE_NAME
#       - name: Push image
#         run: docker push $OPENSTACK_IMAGE_NAME
#   Start-Runner:
#     needs: OpenStack-Container
#     if: ${{ ! failure() && ! cancelled() }}
#     runs-on: ubuntu-latest
#     permissions: write-all
#     container:
#       image: "ghcr.io/${{ github.repository_owner }}/openstack:latest"
#       credentials:
#         username: ${{ github.actor }}
#         password: ${{ secrets.github_token }}
#       env:
#         OS_AUTH_TYPE: "${{ vars.OS_AUTH_TYPE }}"
#         OS_AUTH_URL: "${{ vars.OS_AUTH_URL }}"
#         OS_IDENTITY_API_VERSION: "${{ vars.OS_IDENTITY_API_VERSION }}"
#         OS_REGION_NAME: "${{ vars.OS_REGION_NAME }}"
#         OS_INTERFACE: "${{ vars.OS_INTERFACE }}"
#         OS_APPLICATION_CREDENTIAL_ID: "${{ secrets.OS_APPLICATION_CREDENTIAL_ID }}"
#         OS_APPLICATION_CREDENTIAL_SECRET: "${{ secrets.OS_APPLICATION_CREDENTIAL_SECRET }}"
#         OS_MY_FLAVOUR: "hpc.5.64core"
#         OS_MY_IMAGE: "828d8dde-6ed9-40cc-8fb6-9546a09a03e0"
#     steps:
#       - name: Remove old instance if exists
#         run: openstack server delete --wait production_containers_workflow || true
#       - name: Create instance
#         run: openstack server create --wait --flavor $OS_MY_FLAVOUR --image $OS_MY_IMAGE --key-name containers_workflow production_containers_workflow
#       - name: Assign server public IP
#         run: openstack server add floating ip production_containers_workflow ${{ secrets.CPOUTA_INSTANCE_IP }}
#       - name: Assign security group
#         run: |
#           set -e
#           set -o pipefail
#           openstack server add security group production_containers_workflow test_containers_workflow_sec_group 
#       - name: Assign volume
#         run: openstack server add volume production_containers_workflow test_containers_workflow_vol
# # Find a good way to check if the runner is on; maybe use SSH with nc -z ${{ secrets.CPOUTA_INSTANCE_IP }} 22
#       - name: Check runner is ready
#         run: |
#           sleep 10
#           # now=$(date +%s)
#           # timeout=$((now + 60))
#           # while [ $now -lt $timeout ] ; do
#           #   openstack server show production_containers_workflow
#           #   now=$(date +%s)
#           # done

  Prepare-Build-Containers:
    # needs: Start-Runner
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Prepare VM for docker builds
        run: sudo prepare-vm
      - name: List Docker images
        run: docker images
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Capture Cray Environment
        run: PERSIST_CPE_FOLDER=/media/podman-storage/work/ongoing ./cpe-24.03.sh
        working-directory: ${{ github.workspace }}/RecipesDocker/helper-files
  mpi4py-build-rocm-6.2.4-python-3.12-mpi4py-3.1.6:
    needs: rocm-build-rocm-6.2.4
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./mpi4py/build-rocm-6.2.4-python-3.12-mpi4py-3.1.6.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  tensorflow-build-rocm-6.2.3-python-3.10-tensorflow-2.16.2-horovod-0.28.1:
    needs: rocm-build-rocm-6.2.3
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./tensorflow/build-rocm-6.2.3-python-3.10-tensorflow-2.16.2-horovod-0.28.1.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  alphafold-build-rocm-6.2.4-python-3.10-alphafold-f251de6:
    needs: rocm-build-rocm-6.2.4
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./alphafold/build-rocm-6.2.4-python-3.10-alphafold-f251de6.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-asan-6.2.3:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-asan-6.2.3.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-asan-6.2.2:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-asan-6.2.2.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-6.2.0:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-6.2.0.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-6.2.4:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-6.2.4.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-6.1.3:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-6.1.3.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-6.0.3:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-6.0.3.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-6.2.1:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-6.2.1.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-6.2.2:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-6.2.2.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-6.2.3:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-6.2.3.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-5.7.3:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-5.7.3.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-asan-6.2.4:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-asan-6.2.4.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  rocm-build-rocm-asan-6.1.3:
    needs: Prepare-Build-Containers
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./rocm/build-rocm-asan-6.1.3.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  pytorch-build-rocm-6.1.3-python-3.12-pytorch-v2.4.1:
    needs: rocm-build-rocm-6.1.3
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./pytorch/build-rocm-6.1.3-python-3.12-pytorch-v2.4.1.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  pytorch-build-rocm-6.2.0-python-3.12-pytorch-20240801-vllm-c7a3a47:
    needs: rocm-build-rocm-6.2.0
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./pytorch/build-rocm-6.2.0-python-3.12-pytorch-20240801-vllm-c7a3a47.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  pytorch-build-rocm-6.2.4-python-3.12-pytorch-v2.5.1:
    needs: rocm-build-rocm-6.2.4
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./pytorch/build-rocm-6.2.4-python-3.12-pytorch-v2.5.1.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  pytorch-build-rocm-6.2.3-python-3.12-pytorch-v2.5.1:
    needs: rocm-build-rocm-6.2.3
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./pytorch/build-rocm-6.2.3-python-3.12-pytorch-v2.5.1.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  pytorch-build-rocm-6.0.3-python-3.12-pytorch-v2.3.1:
    needs: rocm-build-rocm-6.0.3
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./pytorch/build-rocm-6.0.3-python-3.12-pytorch-v2.3.1.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  pytorch-build-rocm-6.2.1-python-3.12-pytorch-20240918-vllm-4075b35:
    needs: rocm-build-rocm-6.2.1
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./pytorch/build-rocm-6.2.1-python-3.12-pytorch-20240918-vllm-4075b35.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  pytorch-build-rocm-5.7.3-python-3.12-pytorch-v2.2.2:
    needs: rocm-build-rocm-5.7.3
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./pytorch/build-rocm-5.7.3-python-3.12-pytorch-v2.2.2.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  pytorch-build-rocm-6.2.4-python-3.12-pytorch-v2.6.0:
    needs: rocm-build-rocm-6.2.4
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./pytorch/build-rocm-6.2.4-python-3.12-pytorch-v2.6.0.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  pytorch-build-rocm-6.2.0-python-3.10-pytorch-v2.3.0:
    needs: rocm-build-rocm-6.2.0
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./pytorch/build-rocm-6.2.0-python-3.10-pytorch-v2.3.0.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  jax-build-rocm-6.2.4-python-3.12-jax-0.4.35:
    needs: rocm-build-rocm-6.2.4
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./jax/build-rocm-6.2.4-python-3.12-jax-0.4.35.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  jax-build-rocm-6.2.0-python-3.12-jax-0.4.28:
    needs: rocm-build-rocm-6.2.0
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: ./lumi-containers-build.sh ./jax/build-rocm-6.2.0-python-3.12-jax-0.4.28.done 1
        working-directory: ${{ github.workspace }}/RecipesDocker
  Transfer-Containers:
    needs:
      - mpi4py-build-rocm-6.2.4-python-3.12-mpi4py-3.1.6
      - tensorflow-build-rocm-6.2.3-python-3.10-tensorflow-2.16.2-horovod-0.28.1
      - alphafold-build-rocm-6.2.4-python-3.10-alphafold-f251de6
      - rocm-build-rocm-asan-6.2.3
      - rocm-build-rocm-asan-6.2.2
      - rocm-build-rocm-6.2.0
      - rocm-build-rocm-6.2.4
      - rocm-build-rocm-6.1.3
      - rocm-build-rocm-6.0.3
      - rocm-build-rocm-6.2.1
      - rocm-build-rocm-6.2.2
      - rocm-build-rocm-6.2.3
      - rocm-build-rocm-5.7.3
      - rocm-build-rocm-asan-6.2.4
      - rocm-build-rocm-asan-6.1.3
      - pytorch-build-rocm-6.1.3-python-3.12-pytorch-v2.4.1
      - pytorch-build-rocm-6.2.0-python-3.12-pytorch-20240801-vllm-c7a3a47
      - pytorch-build-rocm-6.2.4-python-3.12-pytorch-v2.5.1
      - pytorch-build-rocm-6.2.3-python-3.12-pytorch-v2.5.1
      - pytorch-build-rocm-6.0.3-python-3.12-pytorch-v2.3.1
      - pytorch-build-rocm-6.2.1-python-3.12-pytorch-20240918-vllm-4075b35
      - pytorch-build-rocm-5.7.3-python-3.12-pytorch-v2.2.2
      - pytorch-build-rocm-6.2.4-python-3.12-pytorch-v2.6.0
      - pytorch-build-rocm-6.2.0-python-3.10-pytorch-v2.3.0
      - jax-build-rocm-6.2.4-python-3.12-jax-0.4.35
      - jax-build-rocm-6.2.0-python-3.12-jax-0.4.28
    if: ${{ ! failure() && ! cancelled() }}
    runs-on: cpouta
    steps:
      - name: Transfer containers to LUMI
        run: ./lumi-containers-transfer.sh 
        working-directory: ${{ github.workspace }}/RecipesDocker

  # Stop-Runner:
  #   needs: Build-Container
  #   if: ${{ ! failure() && ! cancelled() }}
  #   runs-on: ubuntu-latest
  #   container:
  #     image: "ghcr.io/${{ github.repository_owner }}/openstack:latest"
  #     credentials:
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.github_token }}
  #     env:
  #       OS_AUTH_TYPE: "${{ vars.OS_AUTH_TYPE }}"
  #       OS_AUTH_URL: "${{ vars.OS_AUTH_URL }}"
  #       OS_IDENTITY_API_VERSION: "${{ vars.OS_IDENTITY_API_VERSION }}"
  #       OS_REGION_NAME: "${{ vars.OS_REGION_NAME }}"
  #       OS_INTERFACE: "${{ vars.OS_INTERFACE }}"
  #       OS_APPLICATION_CREDENTIAL_ID: "${{ secrets.OS_APPLICATION_CREDENTIAL_ID }}"
  #       OS_APPLICATION_CREDENTIAL_SECRET: "${{ secrets.OS_APPLICATION_CREDENTIAL_SECRET }}"
  #   steps:
  #     - name: Remove instance
  #       run: openstack server delete --wait production_containers_workflow

